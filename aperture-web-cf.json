{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS Cloudformation for Aperture Science WebPage",
    "Parameters": {
        "VpcId": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "VpcId of your existing Virtual Private Cloud (VPC)",
            "ConstraintDescription": "must be the VPC Id of an existing Virtual Private Cloud."
        },
        "Subnets": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "The list of SubnetIds in your Virtual Private Cloud (VPC)",
            "ConstraintDescription": "must be a list of at least two existing subnets associated with at least two different availability zones. They should be residing in the selected Virtual Private Cloud."
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "DBName": {
            "Default": "aperturedb",
            "Description": "MySQL database name",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
        },
        "DBUser": {
            "Default": "chell",
            "NoEcho": "true",
            "Description": "Username for MySQL database access",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "16",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
        },
        "DBPassword": {
            "NoEcho": "true",
            "Description": "Password for MySQL database access",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "41",
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "must contain only alphanumeric characters."
        },
        "DBRootPassword": {
            "NoEcho": "true",
            "Description": "Root password for MySQL",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "41",
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "must contain only alphanumeric characters."
        },
        "WebServerCapacity": {
            "Default": "2",
            "Description": "The initial number of WebServer instances",
            "Type": "Number",
            "MinValue": "1",
            "MaxValue": "3",
            "ConstraintDescription": "must be between 1 and 5 EC2 instances."
        },
        "InstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "SSHLocation": {
            "Description": " The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },
    "Mappings": {
        "AWSInstanceType2Arch": {
            "t2.micro": {
                "Arch": "HVM64"
            }
        },
        "AWSInstanceType2NATArch": {
            "t2.micro": {
                "Arch": "NATHVM64"
            }
        },
        "AWSRegionArch2AMI": {
            "us-east-1": {
                "HVM64": "ami-0080e4c5bc078760e",
                "HVMG2": "ami-0aeb704d503081ea6"
            },
            "us-west-2": {
                "HVM64": "ami-01e24be29428c15b2",
                "HVMG2": "ami-0fe84a5b4563d8f27"
            },
            "us-west-1": {
                "HVM64": "ami-0ec6517f6edbf8044",
                "HVMG2": "ami-0a7fc72dc0e51aa77"
            },
            "eu-west-1": {
                "HVM64": "ami-08935252a36e25f85",
                "HVMG2": "ami-0d5299b1c6112c3c7"
            },
            "eu-west-2": {
                "HVM64": "ami-01419b804382064e4",
                "HVMG2": "NOT_SUPPORTED"
            },
            "eu-west-3": {
                "HVM64": "ami-0dd7e7ed60da8fb83",
                "HVMG2": "NOT_SUPPORTED"
            },
            "eu-central-1": {
                "HVM64": "ami-0cfbf4f6db41068ac",
                "HVMG2": "ami-0aa1822e3eb913a11"
            },
            "eu-north-1": {
                "HVM64": "ami-86fe70f8",
                "HVMG2": "ami-32d55b4c"
            },
            "ap-northeast-1": {
                "HVM64": "ami-00a5245b4816c38e6",
                "HVMG2": "ami-09d0e0e099ecabba2"
            },
            "ap-northeast-2": {
                "HVM64": "ami-00dc207f8ba6dc919",
                "HVMG2": "NOT_SUPPORTED"
            },
            "ap-northeast-3": {
                "HVM64": "ami-0b65f69a5c11f3522",
                "HVMG2": "NOT_SUPPORTED"
            },
            "ap-southeast-1": {
                "HVM64": "ami-05b3bcf7f311194b3",
                "HVMG2": "ami-0e46ce0d6a87dc979"
            },
            "ap-southeast-2": {
                "HVM64": "ami-02fd0b06f06d93dfc",
                "HVMG2": "ami-0c0ab057a101d8ff2"
            },
            "ap-south-1": {
                "HVM64": "ami-0ad42f4f66f6c1cc9",
                "HVMG2": "ami-0244c1d42815af84a"
            },
            "us-east-2": {
                "HVM64": "ami-0cd3dfa4e37921605",
                "HVMG2": "NOT_SUPPORTED"
            },
            "ca-central-1": {
                "HVM64": "ami-07423fb63ea0a0930",
                "HVMG2": "NOT_SUPPORTED"
            },
            "sa-east-1": {
                "HVM64": "ami-05145e0b28ad8e0b2",
                "HVMG2": "NOT_SUPPORTED"
            },
            "cn-north-1": {
                "HVM64": "ami-053617c9d818c1189",
                "HVMG2": "NOT_SUPPORTED"
            },
            "cn-northwest-1": {
                "HVM64": "ami-0f7937761741dc640",
                "HVMG2": "NOT_SUPPORTED"
            }
        }
    },
    "Resources": {
        "MainLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Subnets": {
                    "Ref": "Subnets"
                },
                "SecurityGroups": [
                    {
                        "Ref": "LBSecurityGroup"
                    }
                ]
            }
        },
        "LBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable HTTP access via port 80",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "VpcId": {
                    "Ref": "VpcId"
                }
            }
        },
        "MainLBListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "MainLBTargetGroup"
                        }
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "MainLoadBalancer"
                },
                "Port": "80",
                "Protocol": "HTTP"
            }
        },
        "MainLBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "Port": 80,
                "Protocol": "HTTP",
                "VpcId": {
                    "Ref": "VpcId"
                },
                "TargetGroupAttributes": [
                    {
                        "Key": "stickiness.enabled",
                        "Value": "true"
                    },
                    {
                        "Key": "stickiness.type",
                        "Value": "lb_cookie"
                    },
                    {
                        "Key": "stickiness.lb_cookie.duration_seconds",
                        "Value": "30"
                    }
                ]
            }
        },
        "WebServerGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier": {
                    "Ref": "Subnets"
                },
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfig"
                },
                "MinSize": "1",
                "MaxSize": "3",
                "DesiredCapacity": {
                    "Ref": "WebServerCapacity"
                },
                "TargetGroupARNs": [
                    {
                        "Ref": "MainLBTargetGroup"
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT5M",
                    "Count": {
                        "Ref": "WebServerCapacity"
                    }
                }
            }
        },
        "WebServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable HTTP access via port 80",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VpcId"
                }
            }
        },
        "LaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "web_install": [
                            "install_cfn",
                            "install_web",
                            "configure_web"
                        ]
                    },
                    "install_cfn": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/opt/aws/bin/cfn-init -v ",
                                            "         --stack ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "         --resource LaunchConfig ",
                                            "         --configsets web_install ",
                                            "         --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "install_web": {
                        "packages": {
                            "yum": {
                                "mysql": [],
                                "mysql-server": [],
                                "mysql-libs": [],
                                "httpd": [],
                                "git":[]
                            }
                        },
                        "files": {
                            "/var/www/html/index.html": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "<html>\n",
                                            "  <head>\n",
                                            "    <title>AWS CloudFormation Aperture WebSite</title>\n",
                                            "    <meta charset=\"UTF-8\">\n",
                                            "  </head>\n",
                                            "  <body>\n",
                                            "    <h1>Welcome to Aperture Science computer-aided Enrichment Center</h1>\n",
                                            "<div>\n",
                                            "<pre>\n",
                                            "              .,-:;//;:=,\n",
                                            "        . :H@@@MM@M#H/.,+%;,\n",
                                            "       ,/X+ +M@@M@MM%=,-%HMMM@X/,\n",
                                            "     -+@MM; $M@@MH+-,;XMMMM@MMMM@+-\n",
                                            "    ;@M@@M- XM@X;. -+XXXXXHHH@M@M#@/.\n",
                                            "  ,%MM@@MH ,@%=             .---=-=:=,.\n",
                                            "  =@#@@@MX.,                -%HX$$%%%:;\n",
                                            " =-./@M@M$                   .;@MMMM@MM:\n",
                                            " X@/ -$MM/                    . +MM@@@M$\n",
                                            ",@M@H: :@:                    . =X#@@@@-\n",
                                            ",@@@MMX, .                    /H- ;@M@M=\n",
                                            ".H@@@@M@+,                    %MM+..%#$.\n",
                                            " /MMMM@MMH/.                  XM@MH; =;\n",
                                            "  /%+%$XHH@$=              , .H@@@@MX,\n",
                                            "   .=--------.           -%H.,@@@@@MX,\n",
                                            "   .%MM@@@HHHXX$$$%+- .:$MMX =M@@MM%.\n",
                                            "     =XMMM@MM@MM#H;,-+HMM@M+ /MMMX=\n",
                                            "       =%@M@M#@$-.=$@MM@@@M; %M%=\n",
                                            "         ,:+$+-,/H#MMMMMMM@= =,\n",
                                            "               =++%%%%+/:-.\n",
                                            "</pre>\n",
                                            "</div>\n",
                                            "  </body>\n",
                                            "</html>\n"
                                        ]
                                    ]
                                },
                                "mode": "000600",
                                "owner": "apache",
                                "group": "apache"
                            },
                            "/tmp/setup.mysql": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "CREATE DATABASE ",
                                            {
                                                "Ref": "DBName"
                                            },
                                            ";\n",
                                            "GRANT ALL ON ",
                                            {
                                                "Ref": "DBName"
                                            },
                                            ".* TO '",
                                            {
                                                "Ref": "DBUser"
                                            },
                                            "'@localhost IDENTIFIED BY '",
                                            {
                                                "Ref": "DBPassword"
                                            },
                                            "';\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "mysqld": {
                                    "enabled": "true",
                                    "ensureRunning": "true"
                                },
                                "httpd": {
                                    "enabled": "true",
                                    "ensureRunning": "true"
                                }
                            }
                        }
                    },
                    "configure_web": {
                        "commands": {
                            "01_set_mysql_root_password": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "mysqladmin -u root password '",
                                            {
                                                "Ref": "DBRootPassword"
                                            },
                                            "'"
                                        ]
                                    ]
                                },
                                "test": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "$(mysql ",
                                            {
                                                "Ref": "DBName"
                                            },
                                            " -u root --password='",
                                            {
                                                "Ref": "DBRootPassword"
                                            },
                                            "' >/dev/null 2>&1 </dev/null); (( $? != 0 ))"
                                        ]
                                    ]
                                }
                            },
                            "02_create_database": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "mysql -u root --password='",
                                            {
                                                "Ref": "DBRootPassword"
                                            },
                                            "' < /tmp/setup.mysql"
                                        ]
                                    ]
                                },
                                "test": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "$(mysql ",
                                            {
                                                "Ref": "DBName"
                                            },
                                            " -u root --password='",
                                            {
                                                "Ref": "DBRootPassword"
                                            },
                                            "' >/dev/null 2>&1 </dev/null); (( $? != 0 ))"
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref": "InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum install -y aws-cfn-bootstrap\n",
                                "# Install the files and packages from the metadata\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource LaunchConfig ",
                                "         --configsets web_install ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "# Start up the cfn-hup daemon to listen for changes to the Web Server metadata\n",
                                "/opt/aws/bin/cfn-hup || error_exit 'Failed to start cfn-hup'\n",
                                "# Signal the status from cfn-init\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource WebServerGroup ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "WebsiteURL": {
            "Description": "Aperure Sciense URL",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "MainLoadBalancer",
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        }
    }
}